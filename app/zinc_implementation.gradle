apply plugin: 'com.android.application'

android {
    compileSdkVersion 28
    buildToolsVersion "29.0.1"
    defaultConfig {
        applicationId "com.zinc.gradlestudy"
        minSdkVersion 19
        targetSdkVersion 28
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

}

repositories {
    flatDir {
        // 将一个目录设置为仓库
        dir('libs')
    }
}

/**
 * implementation 是通过 configurations 进行配置
 *
 * 我们可以通过这里注册自己的类型
 */
configurations {

    // 注册了，可以下面使用
    zincPower {
    }

}

/**
 * implementation 编译打包
 *
 * runtimeOnly 知道包进apk
 *
 * compileOnly
 *
 * https://developer.android.com/studio/build/dependencies
 */
dependencies {
    /**
     * 通过 {@link DependencyHandler} add 进行添加
     */

    // 这个会让 放在 libs 下的jar包导入
    implementation fileTree(dir: 'libs', include: ['*.jar'])
//    implementation files("xx.jar")

//    implementation project(":lib")

    implementation 'androidx.appcompat:appcompat:1.0.2'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test:runner:1.1.1'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.1.1'

    zincPower "androidx.constraintlayout:constraintlayout:1.1.3"

    // ./gradlew app:dependencies 查看依赖 看"implementation"项
    // 本地仓库
    // /Users/zinc/Library/Android/sdk/extras/android/m2repository/com

    // 几种写法
    // 1、
    implementation 'androidx.constraintlayout:constraintlayout:1.1.0'
    // 2、
    implementation group: 'androidx.constraintlayout', name: 'constraintlayout', version: '1.1.1'
    // 3、 1.0.+ 会使用 最新的1.0.x的版本
    implementation group: 'androidx.constraintlayout', name: 'constraintlayout', version: '1.0.+'
    // 4、最新版本
    implementation group: 'androidx.constraintlayout', name: 'constraintlayout', version: 'last.integration'

    implementation 'com.facebook.fresco:fresco:2.0.0'

    // 导入aar
    implementation name: 'constraintlayout', ext: 'aar'

}
